{"ast":null,"code":"import _slicedToArray from\"/home/aravind/Desktop/newgenes/genes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";// import React, { useState, useEffect,  } from 'react';\n// import axiosInstance from '../../axios';\n// import Grid from '@material-ui/core/Grid';\n// import Container from '@material-ui/core/Container';\n// import { Link } from 'react-router-dom';\n// import { styled } from '@mui/material/styles';\n// import Box from '@mui/material/Box';\n// import Paper from '@mui/material/Paper';\n// import './postsnav.css'\n// const Item = styled(Paper)(({ theme }) => ({\n// \t...theme.typography.body2,\n// \tpadding: theme.spacing(2),\n// \ttextAlign: 'center',\n// \tcolor: theme.palette.text.secondary,\n//   }));\n// const Posts = () => {\n// \tconst [appState, setAppState] = useState({\n// \t\tloading: true,\n// \t\tposts: [],\n// \t});\n// \tuseEffect(() => {\n// \t\taxiosInstance.get().then((res) => {\n// \t\t\tconst allPosts = res.data;\n// \t\t\tsetAppState({ loading: false, posts: allPosts });\n// \t\t\tconsole.log(res.data);\n// \t\t});\n// \t}, [setAppState]);\n// \treturn (\n// \t\t<Container component=\"main\" maxWidth=\"md\">\n//             <Box sx={{ flexGrow: 1 }}>\n// \t\t\t<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n// \t\t\t{appState.posts.map((post) => {\n// \t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t// Enterprise card is full width at sm breakpoint\n// \t\t\t\t\t\t\t<Grid  item xs={2} sm={4} md={4}    key={post.id}>\n// \t\t\t\t\t\t\t\t<Item   >\n// \t\t\t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n// \t\t\t\t\t\t\t\t\t\t\t\t\tto={`/posts/${post.id}`}>\n// \t\t\t\t\t\t\t\t\t\t\t\t<Item style={{backgroundColor:\" #FFD700\"}}> {post.Variant}</Item>\n//                                 </Link>\n// \t\t\t\t\t\t\t\t</Item>\n// \t\t\t\t\t\t\t</Grid>\n// \t\t\t\t\t\t);\n// \t\t\t\t\t})}\n// \t\t\t </Grid>\n//     </Box>\n//     </Container>\n// \t)\n// };\n// export default Posts;\nimport{Link}from'react-router-dom';import axiosInstance from'../axios';import React,{useState,useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import Typography from\"@material-ui/core/Typography\";import Paper from\"@material-ui/core/Paper\";import Divider from\"@material-ui/core/Divider\";import Grid from\"@material-ui/core/Grid\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var useStyles=makeStyles(function(theme){return{container:{display:\"grid\",gridTemplateColumns:\"repeat(12, 1fr)\",gridGap:\"\".concat(theme.spacing.unit*3,\"px\")},paper:{padding:theme.spacing.unit,textAlign:\"center\",color:theme.palette.text.secondary,whiteSpace:\"nowrap\",marginBottom:theme.spacing.unit},divider:{margin:\"\".concat(theme.spacing.unit*2,\"px 0\")}};});var Posts=function Posts(){var classes=useStyles();var _useState=useState({loading:true,posts:[]}),_useState2=_slicedToArray(_useState,2),appState=_useState2[0],setAppState=_useState2[1];useEffect(function(){axiosInstance.get().then(function(res){var allPosts=res.data;setAppState({loading:false,posts:allPosts});console.log(res.data);});},[setAppState]);return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Grid,{container:true,spacing:24,children:appState.posts.map(function(post){return/*#__PURE__*/_jsx(Grid,{item:true,xs:4,children:/*#__PURE__*/_jsx(Paper,{className:classes.paper,children:/*#__PURE__*/_jsx(Link,{color:\"textPrimary\",to:\"/posts/\".concat(post.id),children:/*#__PURE__*/_jsxs(\"h6\",{style:{backgroundColor:\" #FFD700\"},children:[\" \",post.Variant]})})})},post.id);})})});};export default Posts;","map":{"version":3,"sources":["/home/aravind/Desktop/newgenes/genes/frontend/src/components/admin/posts.js"],"names":["Link","axiosInstance","React","useState","useEffect","makeStyles","Typography","Paper","Divider","Grid","useStyles","theme","container","display","gridTemplateColumns","gridGap","spacing","unit","paper","padding","textAlign","color","palette","text","secondary","whiteSpace","marginBottom","divider","margin","Posts","classes","loading","posts","appState","setAppState","get","then","res","allPosts","data","console","log","map","post","id","backgroundColor","Variant"],"mappings":"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","sourcesContent":["// import React, { useState, useEffect,  } from 'react';\n\n// import axiosInstance from '../../axios';\n\n// import Grid from '@material-ui/core/Grid';\n\n// import Container from '@material-ui/core/Container';\n// import { Link } from 'react-router-dom';\n\n// import { styled } from '@mui/material/styles';\n\n// import Box from '@mui/material/Box';\n// import Paper from '@mui/material/Paper';\n\n// import './postsnav.css'\n\n// const Item = styled(Paper)(({ theme }) => ({\n// \t...theme.typography.body2,\n// \tpadding: theme.spacing(2),\n// \ttextAlign: 'center',\n// \tcolor: theme.palette.text.secondary,\n//   }));\n\n\n// const Posts = () => {\n\t\n// \tconst [appState, setAppState] = useState({\n// \t\tloading: true,\n// \t\tposts: [],\n// \t});\n\t\n\n// \tuseEffect(() => {\n\t\t\n// \t\taxiosInstance.get().then((res) => {\n// \t\t\tconst allPosts = res.data;\n// \t\t\tsetAppState({ loading: false, posts: allPosts });\n// \t\t\tconsole.log(res.data);\n\t\t\t\n// \t\t});\n\t\n// \t}, [setAppState]);\n\n\n\n\n// \treturn (\n// \t\t<Container component=\"main\" maxWidth=\"md\">\n\t\t\t\n//             <Box sx={{ flexGrow: 1 }}>\n\t\t\t\n        \n     \n\t\t\n// \t\t\t<Grid container spacing={{ xs: 2, md: 3 }} columns={{ xs: 4, sm: 8, md: 12 }}>\n\n\n\t\t\n// \t\t\t{appState.posts.map((post) => {\n// \t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t// Enterprise card is full width at sm breakpoint\n// \t\t\t\t\t\t\t<Grid  item xs={2} sm={4} md={4}    key={post.id}>\n// \t\t\t\t\t\t\t\t<Item   >\n// \t\t\t\t\t\t\t\t<Link\n// \t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n// \t\t\t\t\t\t\t\t\t\t\t\t\tto={`/posts/${post.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t\t\t\t\t<Item style={{backgroundColor:\" #FFD700\"}}> {post.Variant}</Item>\n//                                 </Link>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n\n\n\n\t\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\n// \t\t\t\t\t\t\t\t</Item>\n// \t\t\t\t\t\t\t</Grid>\n// \t\t\t\t\t\t);\n// \t\t\t\t\t})}\n\t\t\t\n// \t\t\t </Grid>\n\n//     </Box>\n\n//     </Container>\n// \t)\n// };\n// export default Posts;\n\n\nimport { Link } from 'react-router-dom';\nimport axiosInstance from '../axios';\nimport React, { useState, useEffect,  } from 'react';\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(12, 1fr)\",\n    gridGap: `${theme.spacing.unit * 3}px`\n  },\n  paper: {\n    padding: theme.spacing.unit,\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n    whiteSpace: \"nowrap\",\n    marginBottom: theme.spacing.unit\n  },\n  divider: {\n    margin: `${theme.spacing.unit * 2}px 0`\n  }\n}));\n\nconst Posts = () => {\n\tconst classes = useStyles();\n\tconst [appState, setAppState] = useState({\n\t\tloading: true,\n\t\tposts: [],\n\t});\n\t\n\n\tuseEffect(() => {\n\t\t\n\t\taxiosInstance.get().then((res) => {\n\t\t\tconst allPosts = res.data;\n\t\t\tsetAppState({ loading: false, posts: allPosts });\n\t\t\tconsole.log(res.data);\n\t\t\t\n\t\t});\n\t\n\t}, [setAppState]);\n\n\n\n  return (\n    <div>\n\n      <Grid container spacing={24}>\n\t  {appState.posts.map((post) => {\n\t\t\t\t\t\treturn (\n        <Grid item xs={4} key={post.id}>\n          <Paper className={classes.paper}>\n\n\t\t \n\t\t\t\t\t\t\t\t<Link\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"textPrimary\"\n\t\t\t\t\t\t\t\t\t\t\t\t\tto={`/posts/${post.id}`}>\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t<h6 style={{backgroundColor:\" #FFD700\"}}> {post.Variant}</h6>\n                                </Link>\n\n\n\n\n\t\t  </Paper>\n        </Grid>\n        );\n\t})}\n\n      </Grid>\n    </div>\n  );\n}\n\n\nexport default Posts\n"]},"metadata":{},"sourceType":"module"}