{"version":3,"sources":["serviceWorker.js","components/Navbar.js","components/Single.js","axios.js","components/Searchbar.js","components/admin/posts.js","components/admin/Searchposts.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","history","useHistory","useState","search","data","setData","Fragment","src","className","alt","value","onChange","newValue","onRequestSearch","push","pathname","reload","style","margin","maxWidth","Post","state","posts","postID","this","props","params","axios","get","then","res","setState","Container","component","Variant","Table","size","TableHead","TableRow","TableCell","TableBody","Gene","Impact","Protein_Effect","Variant_Description","Associated_with_drug_Resistance","React","Component","axiosInstance","create","baseURL","timeout","headers","accept","Item","styled","Paper","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","Search","appState","setAppState","useEffect","allPosts","console","log","Box","sx","width","Grid","container","rowSpacing","columnSpacing","xs","sm","md","map","post","item","to","id","textDecoration","backgroundColor","wordWrap","BodyData","query","searchString","handleInputChange","filterArray","getData","fetch","response","json","responseData","length","filter","type","placeholder","i","searchposts","getQuery","handelChange","e","name","ref","input","method","App","exact","path","Posts","Searchposts","Single","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f426a11b.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.0/8 are considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n      headers: { 'Service-Worker': 'script' },\n    })\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready\n        .then(registration => {\n          registration.unregister();\n        })\n        .catch(error => {\n          console.error(error.message);\n        });\n    }\n  }","import React, { useState } from 'react';\n\nimport SearchBar from 'material-ui-search-bar';\nimport { useHistory } from 'react-router-dom';\nimport './nav.css'\n\n\nfunction Header() {\n\t\n\tlet history = useHistory();\n\tconst [data, setData] = useState({ search: '' });\n\n\tconst goSearch = (e) => {\n\t\thistory.push({\n\t\t\tpathname: '/search/',\n\t\t\tsearch: '?search=' + data.search,\n\t\t});\n\t\twindow.location.reload();\n\t};\n\treturn (\n\t\t<React.Fragment>\n\t\t\n      <br/>\n            <img src= 'https://admin.google.com/u/0/ac/images/logo.gif?uid=112108830417041900171&service=google_gsuite' className=\"center\"  alt=\"\"  />\n\t\t          <br/>\n\t\t\t\t\t<SearchBar \n\t\t\t\t\t\tvalue={data.search}\n\t\t\t\t\t\tonChange={(newValue) => setData({ search: newValue })}\n\t\t\t\t\t\tonRequestSearch={() => goSearch(data.search)} style={{\n                            margin: \"0 auto\",\n                            maxWidth: 800,\n\t\t\t\t\t\t\t\n                          }}\n\t\t\t\t\t\t \n\t\t\t\t\t/>\n                    <br/>\n\t\t\t\t\n<br/>\n<br/>\n<br/>\n\n\n\t\t\t\t\n\t\t\n\t\t</React.Fragment>\n\t);\n}\n\nexport default Header;","\n  \nimport React from \"react\";\nimport Container from '@material-ui/core/Container';\n\nimport axios from 'axios'\n\n\n  \n\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\n\n\nclass Post extends React.Component {\n\tstate = {\n\t  posts: {}\n\t};\n  \n\tcomponentDidMount() {\n\t  const postID = this.props.match.params.postID;\n\t  axios.get(`http://127.0.0.1:8000/api/post/${postID}/`).then(res => {\n\t\tthis.setState({\n\t\t  posts: res.data\n\t\t});\n\t  });\n\t}\n\n   render(){\n\treturn (\n\t\t<Container component=\"main\" maxWidth=\"md\">\n\t\t\t<strong>Variant : {this.state.posts.Variant}</strong>\n\t    <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell><strong>Gene</strong></TableCell>\n            <TableCell> <strong>Impact</strong> </TableCell>\n            <TableCell><strong>Protein Effect</strong></TableCell>\n            <TableCell>  <strong>Variant Description</strong> </TableCell>\n\t\t\t<TableCell> <strong>Associated with drug Resistance</strong>  </TableCell>\n           \n          </TableRow>\n        </TableHead>\n        <TableBody>\n         \n            <TableRow >\n              <TableCell>{this.state.posts.Gene}</TableCell>\n              <TableCell>{this.state.posts.Impact}</TableCell>\n              <TableCell>{this.state.posts.Protein_Effect}</TableCell>\n              <TableCell>{this.state.posts.Variant_Description}</TableCell>\n              <TableCell>{this.state.posts.Associated_with_drug_Resistance}</TableCell>\n            </TableRow>\n         \n        </TableBody>\n      </Table>\n\t\t</Container>\n\t);\n   }\n\t\n}\n\n\nexport default Post\n\n\n\n","import axios from 'axios';\n\nconst baseURL = 'http://127.0.0.1:8000/api/';\n\nconst axiosInstance = axios.create({\n\tbaseURL: baseURL,\n\ttimeout: 5000,\n\theaders: {\n\t\t\n\t\t'Content-Type': 'application/json',\n\t\taccept: 'application/json',\n\t},\n});\nexport default axiosInstance;\n\n\n","import React, { useState, useEffect } from 'react';\nimport axiosInstance from '../axios';\nimport Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box';\n\nimport { styled } from '@mui/material/styles';\nimport Grid from '@material-ui/core/Grid';\n\nimport Container from '@material-ui/core/Container';\nimport { Link } from 'react-router-dom';\n\n\nconst Item = styled(Paper)(({ theme }) => ({\n\t...theme.typography.body2,\n\tpadding: theme.spacing(1),\n\ttextAlign: \"center\",\n\tcolor: theme.palette.text.secondary\n  }));\n\nconst Search = () => {\n\t\n\n\tconst search = 'search';\n\tconst [appState, setAppState] = useState({\n\t\tsearch: '',\n\t\tposts: [],\n\t});\n\n\tuseEffect(() => {\n\t\taxiosInstance.get(search + '/' + window.location.search).then((res) => {\n\t\t\tconst allPosts = res.data;\n\t\t\tsetAppState({ posts: allPosts });\n\t\t\tconsole.log(res.data);\n\t\t\t\n\t\t});\n\t}, [setAppState]);\n\n\treturn (\n\t\t<React.Fragment>\n\t\t <Container maxWidth=\"lg\">\n      <Box sx={{ width: \"100%\" }}>\n        <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 4 }}>\n\t\t{appState.posts.map((post) => {\n\t\t\t\t\t\treturn (\n          <Grid item xs={2} key={post.id}>\n            <Item >\n\t\t\t<Link to={`/posts/${post.id}`}  style={{textDecoration: 'none'}}><Item style={{backgroundColor:\"#ffffff\"}} >    <Box sx={{ color: 'secondary.main' }} style={{ wordWrap: \"break-word\"}}>{post.Gene}</Box>\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\n             </Item></Link>\n\t\t\t</Item>\n          </Grid>\n             );\n\t\t\t})}\n        </Grid>\n      </Box>\n    </Container>\n\t\t</React.Fragment>\n\t\t\t\t\n\t);\n};\nexport default Search;","\n\n// import Searchposts from './Searchposts';\n\n// import { Link } from 'react-router-dom';\n// import axiosInstance from '../../axios';\n// import React, { useState, useEffect  } from 'react';\n\n\n\n// import Paper from \"@material-ui/core/Paper\";\n\n// import Grid from \"@material-ui/core/Grid\";\n\n\n// import { styled } from \"@mui/material/styles\";\n\n\n\n// import Box from \"@mui/material/Box\";\n// import Container from \"@mui/material/Container\";\n\n// const Item = styled(Paper)(({ theme }) => ({\n//   ...theme.typography.body2,\n//   padding: theme.spacing(1),\n//   textAlign: \"center\",\n//   color: theme.palette.text.secondary\n// }));\n\n// const Posts = () => {\n\t\n\n// \tconst [appState, setAppState] = useState({\n// \t\tloading: true,\n// \t\tposts: [],\n// \t});\n\t\n\n// \tuseEffect(() => {\n\t\t\n// \t\taxiosInstance.get().then((res) => {\n\t\t\n// \t\t\tconst allPosts =res.data;\n// \t\t\tsetAppState({ loading: false, posts: allPosts });\n// \t\t\tconsole.log(res.data);\n\t\t\t\n// \t\t});\n\t\n// \t}, [setAppState]);\n\t\n\t\n\t\n//   return (\n// \t  <React.Fragment>\n//     <Container>\n     \n//         <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 4 }}>\n// \t\t{appState.posts.map(post => {\n\t\t\t\n// \t\t\t\t\t\treturn (\n//           <Grid item xs={2} key={post.id}>\n//             <Item >\n// \t\t   <Link style={{textDecoration: 'none'}}><Item style={{backgroundColor:\"#ffffff\"}} >    <Box sx={{ color: 'secondary.main' }} style={{ wordWrap: \"break-word\"}}></Box>\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\n//              </Item></Link>\n// \t\t\t</Item>\n//           </Grid>\n//              );\n// \t\t\t})}\n//         </Grid>\n      \n//     </Container>\n// \t</React.Fragment>\n//   );\n// }\n\n\n// export default Posts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { Component } from 'react';\n\nclass BodyData extends Component {\n\nstate = {\n    query: '',\n    data: [],\n    searchString:[]\n}\n\nhandleInputChange = () => {\n    this.setState({\n        query: this.search.value\n    }, this.filterArray)\n}\n\ngetData = () => {\n    fetch(`http://127.0.0.1:8000/api/`)\n    .then(response => response.json())\n    .then(responseData => {\n        // console.log(responseData)\n        this.setState({\n            data:responseData,\n            searchString:responseData\n        })\n    })\n}\n\nfilterArray = () => {\n    let searchString = this.state.query;\n    let responseData = this.state.data;\n\n\n\n    if(searchString.length > 0){\n        // console.log(responseData[i].name);\n        responseData = responseData.filter(searchString);\nthis.setState({\n   responseData\n})\n    }\n\n}\n\ncomponentWillMount() {\n    this.getData();\n}\nrender() {\n    return (\n        <div className=\"searchForm\">\n            <form>\n                <input type=\"text\" id=\"filter\" placeholder=\"Search for...\"  onChange={this.handleInputChange}/>\n            </form>\n            <div>\n                {\n                    this.state.responseData && this.state.responseData.map((i) =>\n                        <p>{i.Gene}</p>\n                    )\n                }\n            </div>\n        </div>\n    )\n  }\n}\n\n\nexport default BodyData;\n\n\n\n\n\n\n\n","import React, { Component } from 'react'\nimport axios from 'axios'\n\nexport class searchposts extends Component {\n    \n      getQuery = () => {\n        axios.get(`http://127.0.0.1:8000/api/SearchPost?q=${this.state.query}`)\n        .then(res => {\n            this.setState({\n                data: res.data\n            });\n        })\n      }\n      handelChange = (e) => {\n        this.setState({ query: this.search.value},\n            () => {\n                this.getQuery()\n            })\n    }\n    render() {\n        return (\n            <div>\n                <form>\n            <input\n                placeholder=\"Search...\"\n                name=\"q\"\n                ref={input => this.search = input}\n                method=\"get\" \n                onChange={this.handelChange}\n\n               \n               \n            />\n        \n        </form>\n                \n            </div>\n        )\n    }\n}\n\nexport default searchposts\n","\nimport React from 'react'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom';\n\nimport Header from './components/Navbar';\nimport Single from './components/Single'\nimport Search from './components/Searchbar';\nimport Posts from './components/admin/posts';\nimport Searchposts from './components/admin/Searchposts';\nfunction App(){\n\t\n\treturn(\n\t\t<div>\n\n<Router>\n     <Header />\n\t\t\t\n\t\t\t<Switch>\n               \n\t\t\t\t<Route exact path=\"/posts\" component={Posts} />\n\t\t\t    <Route exact path=\"/searchposts\" component={Searchposts} />\n\t\t\t\t<Route exact path='/posts/:postID' component={Single} />\n\t\t\t\t<Route path=\"/\" component={Search} /> \n\t\t\t</Switch>\n\t\t\n\t</Router>\n\n\t\t</div>\n\n\t)\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\n\n\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <BrowserRouter >\n    <App />\n  </BrowserRouter>\n, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}