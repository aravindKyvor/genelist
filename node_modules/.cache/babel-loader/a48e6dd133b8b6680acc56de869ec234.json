{"ast":null,"code":"import _classCallCheck from\"/home/aravind/Desktop/newgenes/genes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/aravind/Desktop/newgenes/genes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/aravind/Desktop/newgenes/genes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/aravind/Desktop/newgenes/genes/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";// import Searchposts from './Searchposts';\n// import { Link } from 'react-router-dom';\n// import axiosInstance from '../../axios';\n// import React, { useState, useEffect  } from 'react';\n// import Paper from \"@material-ui/core/Paper\";\n// import Grid from \"@material-ui/core/Grid\";\n// import { styled } from \"@mui/material/styles\";\n// import Box from \"@mui/material/Box\";\n// import Container from \"@mui/material/Container\";\n// const Item = styled(Paper)(({ theme }) => ({\n//   ...theme.typography.body2,\n//   padding: theme.spacing(1),\n//   textAlign: \"center\",\n//   color: theme.palette.text.secondary\n// }));\n// const Posts = () => {\n// \tconst [appState, setAppState] = useState({\n// \t\tloading: true,\n// \t\tposts: [],\n// \t});\n// \tuseEffect(() => {\n// \t\taxiosInstance.get().then((res) => {\n// \t\t\tconst allPosts =res.data;\n// \t\t\tsetAppState({ loading: false, posts: allPosts });\n// \t\t\tconsole.log(res.data);\n// \t\t});\n// \t}, [setAppState]);\n//   return (\n// \t  <React.Fragment>\n//     <Container>\n//         <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 4 }}>\n// \t\t{appState.posts.map(post => {\n// \t\t\t\t\t\treturn (\n//           <Grid item xs={2} key={post.id}>\n//             <Item >\n// \t\t   <Link style={{textDecoration: 'none'}}><Item style={{backgroundColor:\"#ffffff\"}} >    <Box sx={{ color: 'secondary.main' }} style={{ wordWrap: \"break-word\"}}></Box>\t\n//              </Item></Link>\n// \t\t\t</Item>\n//           </Grid>\n//              );\n// \t\t\t})}\n//         </Grid>\n//     </Container>\n// \t</React.Fragment>\n//   );\n// }\n// export default Posts\nimport React,{Component}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var BodyData=/*#__PURE__*/function(_Component){_inherits(BodyData,_Component);var _super=_createSuper(BodyData);function BodyData(){var _this;_classCallCheck(this,BodyData);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={query:'',data:[],searchString:[]};_this.handleInputChange=function(event){_this.setState({query:event.target.value},function(){_this.filterArray();});};_this.getData=function(){fetch(\"http://127.0.0.1:8000/api/\").then(function(response){return response.json();}).then(function(responseData){// console.log(responseData)\n_this.setState({data:responseData,searchString:responseData});});};_this.filterArray=function(){var searchString=_this.state.query;var responseData=_this.state.data;if(searchString.length>0){// console.log(responseData[i].name);\nresponseData=responseData.filter(searchString);_this.setState({responseData:responseData});}};return _this;}_createClass(BodyData,[{key:\"componentWillMount\",value:function componentWillMount(){this.getData();}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"searchForm\",children:[/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"filter\",placeholder:\"Search for...\",onChange:this.handleInputChange})}),/*#__PURE__*/_jsx(\"div\",{children:this.state.responseData&&this.state.responseData.map(function(i){return/*#__PURE__*/_jsx(\"p\",{children:i.Gene});})})]});}}]);return BodyData;}(Component);export default BodyData;","map":{"version":3,"sources":["/home/aravind/Desktop/newgenes/genes/frontend/src/components/admin/posts.js"],"names":["React","Component","BodyData","state","query","data","searchString","handleInputChange","event","setState","target","value","filterArray","getData","fetch","then","response","json","responseData","length","filter","map","i","Gene"],"mappings":"goBAEA;AAEA;AACA;AACA;AAIA;AAEA;AAGA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAgBA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,C,2FAEMC,CAAAA,Q,mUAENC,K,CAAQ,CACJC,KAAK,CAAE,EADH,CAEJC,IAAI,CAAE,EAFF,CAGJC,YAAY,CAAC,EAHT,C,OAMRC,iB,CAAoB,SAACC,KAAD,CAAW,CAC3B,MAAKC,QAAL,CAAc,CACVL,KAAK,CAAEI,KAAK,CAACE,MAAN,CAAaC,KADV,CAAd,CAEE,UAAI,CACR,MAAKC,WAAL,GACD,CAJG,EAMH,C,OAEDC,O,CAAU,UAAM,CACZC,KAAK,8BAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,YAAY,CAAI,CAClB;AACA,MAAKT,QAAL,CAAc,CACVJ,IAAI,CAACa,YADK,CAEVZ,YAAY,CAACY,YAFH,CAAd,EAIH,CARD,EASH,C,OAEDN,W,CAAc,UAAM,CAChB,GAAIN,CAAAA,YAAY,CAAG,MAAKH,KAAL,CAAWC,KAA9B,CACA,GAAIc,CAAAA,YAAY,CAAG,MAAKf,KAAL,CAAWE,IAA9B,CAIA,GAAGC,YAAY,CAACa,MAAb,CAAsB,CAAzB,CAA2B,CACvB;AACAD,YAAY,CAAGA,YAAY,CAACE,MAAb,CAAoBd,YAApB,CAAf,CACR,MAAKG,QAAL,CAAc,CACXS,YAAY,CAAZA,YADW,CAAd,EAGK,CAEJ,C,sEAED,6BAAqB,CACjB,KAAKL,OAAL,GACH,C,sBACD,iBAAS,CACL,mBACI,aAAK,SAAS,CAAC,YAAf,wBACI,mCACI,cAAO,IAAI,CAAC,MAAZ,CAAmB,EAAE,CAAC,QAAtB,CAA+B,WAAW,CAAC,eAA3C,CAA4D,QAAQ,CAAE,KAAKN,iBAA3E,EADJ,EADJ,cAII,qBAEQ,KAAKJ,KAAL,CAAWe,YAAX,EAA2B,KAAKf,KAAL,CAAWe,YAAX,CAAwBG,GAAxB,CAA4B,SAACC,CAAD,qBACnD,mBAAIA,CAAC,CAACC,IAAN,EADmD,EAA5B,CAFnC,EAJJ,GADJ,CAcD,C,sBA/DoBtB,S,EAmEvB,cAAeC,CAAAA,QAAf","sourcesContent":["\n\n// import Searchposts from './Searchposts';\n\n// import { Link } from 'react-router-dom';\n// import axiosInstance from '../../axios';\n// import React, { useState, useEffect  } from 'react';\n\n\n\n// import Paper from \"@material-ui/core/Paper\";\n\n// import Grid from \"@material-ui/core/Grid\";\n\n\n// import { styled } from \"@mui/material/styles\";\n\n\n\n// import Box from \"@mui/material/Box\";\n// import Container from \"@mui/material/Container\";\n\n// const Item = styled(Paper)(({ theme }) => ({\n//   ...theme.typography.body2,\n//   padding: theme.spacing(1),\n//   textAlign: \"center\",\n//   color: theme.palette.text.secondary\n// }));\n\n// const Posts = () => {\n\t\n\n// \tconst [appState, setAppState] = useState({\n// \t\tloading: true,\n// \t\tposts: [],\n// \t});\n\t\n\n// \tuseEffect(() => {\n\t\t\n// \t\taxiosInstance.get().then((res) => {\n\t\t\n// \t\t\tconst allPosts =res.data;\n// \t\t\tsetAppState({ loading: false, posts: allPosts });\n// \t\t\tconsole.log(res.data);\n\t\t\t\n// \t\t});\n\t\n// \t}, [setAppState]);\n\t\n\t\n\t\n//   return (\n// \t  <React.Fragment>\n//     <Container>\n     \n//         <Grid container rowSpacing={1} columnSpacing={{ xs: 1, sm: 2, md: 4 }}>\n// \t\t{appState.posts.map(post => {\n\t\t\t\n// \t\t\t\t\t\treturn (\n//           <Grid item xs={2} key={post.id}>\n//             <Item >\n// \t\t   <Link style={{textDecoration: 'none'}}><Item style={{backgroundColor:\"#ffffff\"}} >    <Box sx={{ color: 'secondary.main' }} style={{ wordWrap: \"break-word\"}}></Box>\t\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\n//              </Item></Link>\n// \t\t\t</Item>\n//           </Grid>\n//              );\n// \t\t\t})}\n//         </Grid>\n      \n//     </Container>\n// \t</React.Fragment>\n//   );\n// }\n\n\n// export default Posts\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { Component } from 'react';\n\nclass BodyData extends Component {\n\nstate = {\n    query: '',\n    data: [],\n    searchString:[]\n}\n\nhandleInputChange = (event) => {\n    this.setState({\n        query: event.target.value\n    },()=>{\n  this.filterArray();\n})\n\n}\n\ngetData = () => {\n    fetch(`http://127.0.0.1:8000/api/`)\n    .then(response => response.json())\n    .then(responseData => {\n        // console.log(responseData)\n        this.setState({\n            data:responseData,\n            searchString:responseData\n        })\n    })\n}\n\nfilterArray = () => {\n    let searchString = this.state.query;\n    let responseData = this.state.data;\n\n\n\n    if(searchString.length > 0){\n        // console.log(responseData[i].name);\n        responseData = responseData.filter(searchString);\nthis.setState({\n   responseData\n})\n    }\n\n}\n\ncomponentWillMount() {\n    this.getData();\n}\nrender() {\n    return (\n        <div className=\"searchForm\">\n            <form>\n                <input type=\"text\" id=\"filter\" placeholder=\"Search for...\"  onChange={this.handleInputChange}/>\n            </form>\n            <div>\n                {\n                    this.state.responseData && this.state.responseData.map((i) =>\n                        <p>{i.Gene}</p>\n                    )\n                }\n            </div>\n        </div>\n    )\n  }\n}\n\n\nexport default BodyData;\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}